// Generated by CoffeeScript 1.10.0
(function() {
  var slice = [].slice;

  window.RGB = (function() {
    function RGB(r, g, b) {
      this.r = r != null ? r : 0;
      this.g = g != null ? g : 0;
      this.b = b != null ? b : 0;
    }

    return RGB;

  })();

  window.Color = (function() {
    var formats, update;

    formats = {
      hex: '',
      rgb: '',
      hsl: ''
    };

    update = function(value) {
      var type;
      return type = Color.getFormat(value);
    };

    Color.HEX_REGEX = /#(?:[a-f\d]{3}){1,2}\b/;

    Color.RGB_REGEX = /rgb\((?:(?:\s*0*(?:25[0-5]|2[0-4]\d|1?\d?\d)\s*,){2}\s*0*(?:25[0-5]|2[0-4]\d|1?\d?\d)|\s*0*(?:100(?:\.0+)?|\d?\d(?:\.\d+)?)%(?:\s*,\s*0*(?:100(?:\.0+)?|\d?\d(?:\.\d+)?)%){2})\s*\)/;

    Color.HSL_REGEX = /hsl\(\s*0*(?:360|3[0-5]\d|[12]?\d?\d)\s*(?:,\s*0*(?:100(?:\.0+)?|\d?\d(?:\.\d+)?)%\s*){2}\)/;

    Color.getFormat = function(value) {
      var type;
      type = (function() {
        switch (false) {
          case !value.match(Color.HSL_REGEX):
            return 'hsl';
          case !value.match(Color.RGB_REGEX):
            return 'rgb';
          case !value.match(Color.HEX_REGEX):
            return 'hex';
          default:
            return 'none';
        }
      })();
      return type;
    };

    Color.hexToRGB = function(hex) {
      return hex;
    };

    function Color() {
      var rest, value;
      value = arguments[0], rest = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (value == null) {
        value = '#000000';
      }
      value = value.toString();
      Color.getFormat(value);
      this.hex = value;
    }

    Color.prototype.get = function(property) {
      if (property in formats) {
        return formats[property];
      }
    };

    Color.prototype.set = function(property, value) {
      if (property in formats) {
        return update(value);
      }
    };

    return Color;

  })();

  console.log(new Color('#555555'));

  console.log(new Color('rgb(12, 15, 55)'));

  console.log(new Color('hsl(15,55,12)'));

}).call(this);
